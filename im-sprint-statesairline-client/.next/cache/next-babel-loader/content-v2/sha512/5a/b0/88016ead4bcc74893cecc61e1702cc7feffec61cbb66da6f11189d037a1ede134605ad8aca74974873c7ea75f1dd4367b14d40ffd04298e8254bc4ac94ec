{"ast":null,"code":"import fetch from 'node-fetch';\nexport function getFlight(filterBy = {}) {\n  // HINT: 가장 마지막 테스트를 통과하기 위해, fetch를 이용합니다. 아래 구현은 완전히 삭제되어도 상관없습니다.\n  // TODO: 아래 구현을 REST API 호출로 대체하세요.\n  let url = 'http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight';\n  let departure = filterBy.departure;\n  let destination = filterBy.destination;\n\n  if (departure && destination) {\n    url = `http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight?departure=${departure}&destination=${destination}`;\n  } // return new Promise((resolve) => {\n  //   fetch(url)\n  //   .then((data) => data.json())\n  //   .then((json) => {\n  //     setTimeout(() => {\n  //     resolve(json);\n  //   }, 500)})\n  // });\n\n\n  return fetch(url).then(data => data.json()).then(json => {\n    setTimeout(() => {\n      console.log(json);\n      return json;\n    }, 500);\n  });\n}","map":{"version":3,"sources":["/home/minjman/Desktop/github/Sprint/im-sprint-statesairline-client/api/FlightDataApi.js"],"names":["fetch","getFlight","filterBy","url","departure","destination","then","data","json","setTimeout","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAO,SAASC,SAAT,CAAmBC,QAAQ,GAAG,EAA9B,EAAkC;AACvC;AACA;AACA,MAAIC,GAAG,GAAG,yEAAV;AACA,MAAIC,SAAS,GAAGF,QAAQ,CAACE,SAAzB;AACA,MAAIC,WAAW,GAAGH,QAAQ,CAACG,WAA3B;;AAEA,MAAGD,SAAS,IAAIC,WAAhB,EAA6B;AAC3BF,IAAAA,GAAG,GAAI,qFAAoFC,SAAU,gBAAeC,WAAY,EAAhI;AACD,GATsC,CAWvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAOL,KAAK,CAACG,GAAD,CAAL,CACJG,IADI,CACEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADX,EAEJF,IAFI,CAEEE,IAAD,IAAU;AACdC,IAAAA,UAAU,CAAC,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAOA,IAAP;AACD,KAHW,EAGT,GAHS,CAAV;AAGM,GANH,CAAP;AAOD","sourcesContent":["import fetch from 'node-fetch'\n\nexport function getFlight(filterBy = {}) {\n  // HINT: 가장 마지막 테스트를 통과하기 위해, fetch를 이용합니다. 아래 구현은 완전히 삭제되어도 상관없습니다.\n  // TODO: 아래 구현을 REST API 호출로 대체하세요.\n  let url = 'http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight';\n  let departure = filterBy.departure;\n  let destination = filterBy.destination;\n\n  if(departure && destination) {\n    url = `http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight?departure=${departure}&destination=${destination}`;\n  }\n\n  // return new Promise((resolve) => {\n  //   fetch(url)\n  //   .then((data) => data.json())\n  //   .then((json) => {\n  //     setTimeout(() => {\n  //     resolve(json);\n  //   }, 500)})\n  // });\n\n  return fetch(url)\n    .then((data) => data.json())\n    .then((json) => {\n      setTimeout(() => {\n      console.log(json);\n      return json;\n    }, 500)})\n}"]},"metadata":{},"sourceType":"module"}