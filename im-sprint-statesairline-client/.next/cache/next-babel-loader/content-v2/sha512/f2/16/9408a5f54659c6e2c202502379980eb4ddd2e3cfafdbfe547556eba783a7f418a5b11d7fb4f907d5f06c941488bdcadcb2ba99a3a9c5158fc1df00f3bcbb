{"ast":null,"code":"import flightList from '../resource/flightList';\nimport fetch from 'node-fetch';\n\nif (true) {\n  localStorage.setItem('flight', JSON.stringify(flightList));\n}\n\nexport function getFlight() {\n  var filterBy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // HINT: 가장 마지막 테스트를 통과하기 위해, fetch를 이용합니다. 아래 구현은 완전히 삭제되어도 상관없습니다.\n  // TODO: 아래 구현을 REST API 호출로 대체하세요.\n  var json = [];\n\n  if (true) {\n    json = localStorage.getItem(\"flight\");\n  }\n\n  var flight = JSON.parse(json) || [];\n  return new Promise(function (resolve) {\n    var filtered = flight.filter(function (flight) {\n      var condition = true;\n\n      if (filterBy.departure) {\n        condition = condition && flight.departure === filterBy.departure;\n      }\n\n      if (filterBy.destination) {\n        condition = condition && flight.destination === filterBy.destination;\n      }\n\n      return condition;\n    });\n    setTimeout(function () {\n      resolve(filtered);\n    }, 1000);\n  });\n}","map":{"version":3,"sources":["/home/minjman/Desktop/github/Sprint/im-sprint-statesairline-client/api/FlightDataApi.js"],"names":["flightList","fetch","localStorage","setItem","JSON","stringify","getFlight","filterBy","json","getItem","flight","parse","Promise","resolve","filtered","filter","condition","departure","destination","setTimeout"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,UAAmC;AACjCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAA/B;AACD;;AAED,OAAO,SAASM,SAAT,GAAkC;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AACvC;AACA;AAGA,MAAIC,IAAI,GAAG,EAAX;;AACA,YAAmC;AACjCA,IAAAA,IAAI,GAAGN,YAAY,CAACO,OAAb,CAAqB,QAArB,CAAP;AACD;;AACD,MAAMC,MAAM,GAAGN,IAAI,CAACO,KAAL,CAAWH,IAAX,KAAoB,EAAnC;AAEA,SAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,QAAMC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,CAAc,UAACL,MAAD,EAAY;AACzC,UAAIM,SAAS,GAAG,IAAhB;;AACA,UAAIT,QAAQ,CAACU,SAAb,EAAwB;AACtBD,QAAAA,SAAS,GAAGA,SAAS,IAAIN,MAAM,CAACO,SAAP,KAAqBV,QAAQ,CAACU,SAAvD;AACD;;AACD,UAAIV,QAAQ,CAACW,WAAb,EAA0B;AACxBF,QAAAA,SAAS,GAAGA,SAAS,IAAIN,MAAM,CAACQ,WAAP,KAAuBX,QAAQ,CAACW,WAAzD;AACD;;AACD,aAAOF,SAAP;AACD,KATgB,CAAjB;AAWAG,IAAAA,UAAU,CAAC,YAAM;AACfN,MAAAA,OAAO,CAACC,QAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAfM,CAAP;AAgBD","sourcesContent":["import flightList from '../resource/flightList'\nimport fetch from 'node-fetch'\n\nif (typeof window !== \"undefined\") {\n  localStorage.setItem('flight', JSON.stringify(flightList));\n}\n\nexport function getFlight(filterBy = {}) {\n  // HINT: 가장 마지막 테스트를 통과하기 위해, fetch를 이용합니다. 아래 구현은 완전히 삭제되어도 상관없습니다.\n  // TODO: 아래 구현을 REST API 호출로 대체하세요.\n\n\n  let json = []\n  if (typeof window !== \"undefined\") {\n    json = localStorage.getItem(\"flight\");\n  }\n  const flight = JSON.parse(json) || [];\n\n  return new Promise((resolve) => {\n    const filtered = flight.filter((flight) => {\n      let condition = true;\n      if (filterBy.departure) {\n        condition = condition && flight.departure === filterBy.departure\n      }\n      if (filterBy.destination) {\n        condition = condition && flight.destination === filterBy.destination\n      }\n      return condition;\n    })\n\n    setTimeout(() => {\n      resolve(filtered)\n    }, 1000);\n  });\n}"]},"metadata":{},"sourceType":"module"}