{"ast":null,"code":"import flightList from '../resource/flightList';\nimport fetch from 'node-fetch'; // if (typeof window !== \"undefined\") {\n//   localStorage.setItem('flight', JSON.stringify(flightList));\n// }\n\nexport function getFlight(filterBy = {}) {\n  // HINT: 가장 마지막 테스트를 통과하기 위해, fetch를 이용합니다. 아래 구현은 완전히 삭제되어도 상관없습니다.\n  // TODO: 아래 구현을 REST API 호출로 대체하세요.\n  let url = 'http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight';\n  let departure = filterBy.departure;\n  let destination = filterBy.destination;\n\n  if (departure && destination) {\n    url = `http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight?departure=${departure}&destination=${destination}`;\n  }\n\n  return new Promise(resolve => {\n    fetch(url).then(data => data.json()).then(json => {\n      setTimeout(() => {\n        resolve(json);\n      }, 1000);\n    });\n  });\n}","map":{"version":3,"sources":["/home/minjman/Desktop/github/Sprint/im-sprint-statesairline-client/api/FlightDataApi.js"],"names":["flightList","fetch","getFlight","filterBy","url","departure","destination","Promise","resolve","then","data","json","setTimeout"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CAEA;AACA;AACA;;AAEA,OAAO,SAASC,SAAT,CAAmBC,QAAQ,GAAG,EAA9B,EAAkC;AACvC;AACA;AACA,MAAIC,GAAG,GAAG,yEAAV;AACA,MAAIC,SAAS,GAAGF,QAAQ,CAACE,SAAzB;AACA,MAAIC,WAAW,GAAGH,QAAQ,CAACG,WAA3B;;AAEA,MAAGD,SAAS,IAAIC,WAAhB,EAA6B;AAC3BF,IAAAA,GAAG,GAAI,qFAAoFC,SAAU,gBAAeC,WAAY,EAAhI;AACD;;AAED,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BP,IAAAA,KAAK,CAACG,GAAD,CAAL,CACCK,IADD,CACOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADhB,EAECF,IAFD,CAEOE,IAAD,IAAU;AACdC,MAAAA,UAAU,CAAC,MAAM;AACjBJ,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAFW,EAET,IAFS,CAAV;AAEO,KALT;AAMD,GAPM,CAAP;AAQD","sourcesContent":["import flightList from '../resource/flightList'\nimport fetch from 'node-fetch'\n\n// if (typeof window !== \"undefined\") {\n//   localStorage.setItem('flight', JSON.stringify(flightList));\n// }\n\nexport function getFlight(filterBy = {}) {\n  // HINT: 가장 마지막 테스트를 통과하기 위해, fetch를 이용합니다. 아래 구현은 완전히 삭제되어도 상관없습니다.\n  // TODO: 아래 구현을 REST API 호출로 대체하세요.\n  let url = 'http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight';\n  let departure = filterBy.departure;\n  let destination = filterBy.destination;\n\n  if(departure && destination) {\n    url = `http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight?departure=${departure}&destination=${destination}`;\n  }\n\n  return new Promise((resolve) => {\n    fetch(url)\n    .then((data) => data.json())\n    .then((json) => {\n      setTimeout(() => {\n      resolve(json);\n    }, 1000)})\n  });\n}"]},"metadata":{},"sourceType":"module"}