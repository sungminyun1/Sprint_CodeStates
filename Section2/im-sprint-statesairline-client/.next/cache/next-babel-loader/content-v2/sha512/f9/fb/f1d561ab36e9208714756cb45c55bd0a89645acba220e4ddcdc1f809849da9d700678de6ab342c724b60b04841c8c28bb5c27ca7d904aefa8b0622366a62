{"ast":null,"code":"import flightList from '../resource/flightList';\nimport fetch from 'node-fetch';\nexport function getFlight() {\n  var filterBy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // HINT: 가장 마지막 테스트를 통과하기 위해, fetch를 이용합니다. 아래 구현은 완전히 삭제되어도 상관없습니다.\n  // TODO: 아래 구현을 REST API 호출로 대체하세요.\n  var url = 'http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight';\n  var departure = filterBy.departure;\n  var destination = filterBy.destination;\n\n  if (departure && destination) {\n    url = \"http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight?departure=\".concat(departure, \"&destination=\").concat(destination);\n  }\n\n  return new Promise(function (resolve) {\n    fetch(url).then(function (data) {\n      return data.json();\n    }).then(function (json) {\n      setTimeout(function () {\n        resolve(json);\n      }, 500);\n    });\n  });\n}","map":{"version":3,"sources":["/home/minjman/Desktop/github/Sprint/im-sprint-statesairline-client/api/FlightDataApi.js"],"names":["flightList","fetch","getFlight","filterBy","url","departure","destination","Promise","resolve","then","data","json","setTimeout"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAO,SAASC,SAAT,GAAkC;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AACvC;AACA;AACA,MAAIC,GAAG,GAAG,yEAAV;AACA,MAAIC,SAAS,GAAGF,QAAQ,CAACE,SAAzB;AACA,MAAIC,WAAW,GAAGH,QAAQ,CAACG,WAA3B;;AAEA,MAAGD,SAAS,IAAIC,WAAhB,EAA6B;AAC3BF,IAAAA,GAAG,+FAAwFC,SAAxF,0BAAiHC,WAAjH,CAAH;AACD;;AAED,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BP,IAAAA,KAAK,CAACG,GAAD,CAAL,CACCK,IADD,CACM,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,KADN,EAECF,IAFD,CAEM,UAACE,IAAD,EAAU;AACdC,MAAAA,UAAU,CAAC,YAAM;AACjBJ,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAFW,EAET,GAFS,CAAV;AAEM,KALR;AAMD,GAPM,CAAP;AAQD","sourcesContent":["import flightList from '../resource/flightList'\nimport fetch from 'node-fetch'\n\nexport function getFlight(filterBy = {}) {\n  // HINT: 가장 마지막 테스트를 통과하기 위해, fetch를 이용합니다. 아래 구현은 완전히 삭제되어도 상관없습니다.\n  // TODO: 아래 구현을 REST API 호출로 대체하세요.\n  let url = 'http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight';\n  let departure = filterBy.departure;\n  let destination = filterBy.destination;\n\n  if(departure && destination) {\n    url = `http://ec2-13-124-90-231.ap-northeast-2.compute.amazonaws.com:81/flight?departure=${departure}&destination=${destination}`;\n  }\n\n  return new Promise((resolve) => {\n    fetch(url)\n    .then((data) => data.json())\n    .then((json) => {\n      setTimeout(() => {\n      resolve(json);\n    }, 500)})\n  });\n}"]},"metadata":{},"sourceType":"module"}